SQL> 
SQL> REM Prelab Lab 1
SQL> 
SQL> Rem task 1:
SQL> 
SQL> declare
  2  v_contract_number	     CONSTANT	     NUMBER := 8;
  3  v_client_id     varchar(50);
  4  
  5  begin
  6  
  7  select client_id
  8  into v_client_id
  9  from ata_contract
 10  where contract_number = v_contract_number;
 11  
 12  exception
 13  when no_data_found then
 14  dbms_output.put_line('no such contract number');
 15  
 16  end;
 17  /
no such contract number                                                                             

PL/SQL procedure successfully completed.

SQL> 
SQL> Rem task 2:
SQL> 
SQL> 
SQL> declare
  2  v_contract_id   CONSTANT	     NUMBER := 0000020;
  3  v_contract_fee  varchar(50);
  4  
  5  begin
  6  
  7  select fee
  8  into v_contract_fee
  9  from ata_contract
 10  where client_id = v_contract_id;
 11  
 12  exception
 13  when too_many_rows then
 14  dbms_output.put_line('client id brings back more than one fee');
 15  
 16  end;
 17  /
client id brings back more than one fee                                                             

PL/SQL procedure successfully completed.

SQL> 
SQL> Rem task 3:
SQL> 
SQL> declare
  2  v_add_fee	     constant number := 500;
  3  v_event_type constant varchar(20) := 'Retirement Party';
  4  e_wrong_event exception;
  5  
  6  begin
  7  
  8  update ata_contract
  9  set fee = fee + v_add_fee
 10  where event_type = v_event_type;
 11  
 12  if sql%rowcount = 0 then
 13  raise e_wrong_event;
 14  end if;
 15  
 16  exception
 17  when e_wrong_event then
 18  dbms_output.put_line('No rows updated');
 19  
 20  end;
 21  /
No rows updated                                                                                     

PL/SQL procedure successfully completed.

SQL> 
SQL> rem task 4:
SQL> 
SQL> declare
  2  v_add_fee	     constant number := 500;
  3  v_event_type constant varchar(20) := 'Retirement Party';
  4  e_wrong_event exception;
  5  pragma exception_init(e_wrong_event, -20111);
  6  
  7  begin
  8  
  9  update ata_contract
 10  set fee = fee + v_add_fee
 11  where event_type = v_event_type;
 12  
 13  if sql%rowcount = 0 then
 14  raise_application_error(-20111, 'Wrong Event Type');
 15  end if;
 16  
 17  end;
 18  /
declare
*
ERROR at line 1:
ORA-20111: Wrong Event Type 
ORA-06512: at line 14 


SQL> 
SQL> 
SQL> 
SQL> set echo off;
